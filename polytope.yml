templates:
- id: stack
  run:
  - api
  - postgres
  - kong
  - frontend

modules:
  - id: kong
    module: polytope/kong!simple
    args:
      image: gcr.io/arched-inkwell-420116/kong:3.6.1
      port: 3000
      config-file: { type: host, path: ./conf/components/kong/dev.yml }
      autoreload: true
      services:
      - { id: kong, ports: [{ port: 3000, protocol: http }]}

  - id: api
    module: polytope/python
    args:
      id: backend
      image: gcr.io/arched-inkwell-420116/python:3.11.8-slim-bookworm
      code: { type: host, path: ./api }
      cmd: ./bin/run
      restart: { policy: on-failure }
      services:
        - { id: "api", ports: [{protocol: http, port: 80, expose-as: 3001}] }
      env:
        - { name: API_PORT, value: 4000 }
        - { name: LOG_LEVEL, value: INFO }
        - { name: OPENAI_API_KEY, value: "#pt-secret openai-api-key" }
        - { name: ANTHROPIC_API_KEY, value: "#pt-secret anthropic-api-key" }
        - { name: FOOTWAY_API_KEY, value: "#pt-secret footway-api-key" }
        - { name: POSTGRES_HOST, value: "postgres" }
        - { name: POSTGRES_PORT, value: "5432" }
        - { name: POSTGRES_DB, value: "footway" }
        - { name: POSTGRES_USER, value: "postgres" }
        - { name: POSTGRES_PASSWORD, value: "postgres" }
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache } }
        - { path: /root/conf/, source: { type: host, path: ./conf } }

  - id: frontend
    module: polytope/node
    args:
      id: frontend
      image: gcr.io/arched-inkwell-420116/node:21.7.0-slim
      code: { type: host, path: ./frontend }
      cmd: ./bin/run
      env:
        - { name: PORT, value: 3000 }
        - { name: HOST, value: 0.0.0.0 }
        - { name: REACT_APP_API_BASE_URL, value: "http://localhost:3000" }
      restart:
        policy: on-failure
      services:
        - id: frontend
          ports: [{protocol: http, port: 3000, expose-as: 3002}]
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/.npm/, source: { type: volume, scope: project, id: npm-cache }}
        - { path: /app/node_modules/, source: { type: volume, scope: project, id: npm-modules }}

  - id: postgres
    module: polytope/postgres
    args:
      image: ankane/pgvector
      env:
        - { name: POSTGRES_DB, value: "footway" }
        - { name: POSTGRES_USER, value: "postgres" }
        - { name: POSTGRES_PASSWORD, value: "postgres" }
      data-volume: { type: volume, scope: project, id: postgres-data }
      services:
        - id: postgres
          ports: [{ port: 5432 }]
